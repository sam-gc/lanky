Io = <"Io">;
Meta = <"Meta">;
Time = <"Time">;

makeReadable = func(fmem) {
    mem = fmem;
    suffixes = ['', 'kb', 'mb', 'gb'];

    for i = 0; mem > 1; i += 1 {
        prev = mem;
        mem /= 1024.0;
    }

    ret prev + suffixes[i - 1];
};

printUsage = func() {
    Io.putln("Used: " + makeReadable(Meta.gc_alloced()));
};

tightLoop = func() {
    count = 0;
    for i = 0; i < 1000000; i += 1 {
        count += i;
    }

    ret count;
};

printUsage();
then = Time.unix();
tightLoop();
Io.putln("With GC:\n\t" + (Time.unix() - then) + "ms");
printUsage();

Io.putln('----------------------\n');

Meta.gc_halt();
then = Time.unix();
tightLoop();
Io.putln("Without GC:\n\t" + (Time.unix() - then) + "ms");

Io.putln('----------------------\n');

Meta.gc_resume();
Meta.gc_pause();
then = Time.unix();
tightLoop();
Io.putln("Without GC tracking:\n\t" + (Time.unix() - then) + "ms");
printUsage();


Point = class() -> self {
    self.build_ = func(x, y) {
        self.x = Convert.toFloat(x);
        self.y = Convert.toFloat(y);
    };
};

Point.genList = func() {
    ret [
        Point(10, 0),
        Point(11, 3),
        Point(12, 6),
        Point(134, 92),
        Point(34, 12),
        Point(14, 12),
        Point(9, -3),
        Point(0, 33),
        Point(11, 5),
        Point(17, 2),
        Point(0, -30)
    ];
};

maxPoints = func(points) {
    max = 0;
    points.forEach(func(p1) {
        points.forEach(func(p2) {
            if p1 == p2 {
                ret nil;
            }

            cur = 2;
            m = (p2.y - p1.y) / (p2.x - p1.x);
            b = p1.y - p1.x * m;

            points.forEach(func(p3) {
                if p3 == p1 | p3 == p2 {
                    ret nil;
                }

                if p3.y == m * p3.x + b {
                    cur += 1;
                }
            });

            if cur > max {
                max = cur;
            }
        });
    });

    ret max;
};


Io.putln(maxPoints(Point.genList()));
